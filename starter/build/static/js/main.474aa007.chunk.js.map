{"version":3,"sources":["constant/index.jsx","component/book/index.jsx","component/book-shelf/index.jsx","pages/main.jsx","BooksAPI.js","pages/searching-book.jsx","App.js","index.js"],"names":["CURRENTLY_READING","WANT_TO_READ","READ","Book","book","updateBook","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","e","target","value","disabled","selected","shelf","title","author","BookShelf","books","map","id","BookShelfPage","props","getBooksOfShelf","list","filter","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","method","body","JSON","stringify","search","query","maxResults","SearchingBookPage","useState","searchBooks","setSearchBooks","input","a","listOfBook","type","placeholder","searchBook","length","App","setBooks","getAllBook","allOfBooks","useEffect","ignore","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.474aa007.chunk.js","sourcesContent":["export const CURRENTLY_READING = \"currentlyReading\";\r\nexport const WANT_TO_READ = \"wantToRead\";\r\nexport const READ = \"read\";\r\n","import { CURRENTLY_READING, READ, WANT_TO_READ } from \"../../constant\";\r\n\r\nconst Book = ({ book, updateBook }) => {\r\n  return (\r\n    <div className=\"book\">\r\n      <div className=\"book-top\">\r\n        <div\r\n          className=\"book-cover\"\r\n          style={{\r\n            width: 128,\r\n            height: 193,\r\n            backgroundImage:\r\n              book.imageLinks?.thumbnail && `url(${book.imageLinks.thumbnail})`,\r\n          }}\r\n        ></div>\r\n        <div className=\"book-shelf-changer\">\r\n          <select\r\n            onChange={(e) => {\r\n              updateBook(book, e.target.value);\r\n            }}\r\n          >\r\n            <option value=\"none\" disabled>\r\n              Move to...\r\n            </option>\r\n            <option\r\n              value=\"currentlyReading\"\r\n              selected={book.shelf === CURRENTLY_READING}\r\n            >\r\n              Currently Reading\r\n            </option>\r\n            <option value=\"wantToRead\" selected={book.shelf === WANT_TO_READ}>\r\n              Want to Read\r\n            </option>\r\n            <option value=\"read\" selected={book.shelf === READ}>\r\n              Read\r\n            </option>\r\n            <option value=\"none\" selected={!book.shelf}>None</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"book-title\">{book.title}</div>\r\n      <div className=\"book-authors\">{book.author}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Book;\r\n","import Book from \"../book\";\r\n\r\nconst BookShelf = ({ title, books, updateBook }) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{title}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books?.map((book) => {\r\n            return (\r\n              <li key={book.id}>\r\n                <Book book={book} updateBook={updateBook} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default BookShelf;\r\n","import BookShelf from \"../component/book-shelf\";\r\nimport { CURRENTLY_READING, READ, WANT_TO_READ } from \"../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BookShelfPage = (props) => {\r\n  const getBooksOfShelf = (list, shelf) => {\r\n    return list?.filter((book) => {\r\n      return book.shelf === shelf;\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <BookShelf\r\n            title={\"Currently Reading\"}\r\n            books={getBooksOfShelf(props.books, CURRENTLY_READING)}\r\n            updateBook={props.updateBook}\r\n          />\r\n          <BookShelf\r\n            title={\"Want to Read\"}\r\n            books={getBooksOfShelf(props.books, WANT_TO_READ)}\r\n            updateBook={props.updateBook}\r\n          />\r\n          <BookShelf\r\n            title={\"Read\"}\r\n            books={getBooksOfShelf(props.books, READ)}\r\n            updateBook={props.updateBook}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to=\"/search\">Add a book</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default BookShelfPage;\r\n","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import Book from \"../component/book\";\r\nimport { useState } from \"react\";\r\nimport { search } from \"../BooksAPI\";\r\nimport { Link } from \"react-router-dom\";\r\nconst SearchingBookPage = (props) => {\r\n  const [searchBooks, setSearchBooks] = useState();\r\n  async function searchBook(input) {\r\n    const listOfBook = await search(input);\r\n    setSearchBooks(listOfBook);\r\n  }\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link to=\"..\\\" className=\"close-search\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title, author, or ISBN\"\r\n            onChange={(e) => {\r\n              searchBook(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {searchBooks?.length > 0 &&\r\n            searchBooks.map((book) => {\r\n              return (\r\n                <li key={book.id}>\r\n                  <Book book={book} updateBook={props.updateBook} />\r\n                </li>\r\n              );\r\n            })}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchingBookPage;\r\n","import { Route, Routes } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport BookShelfPage from \"./pages/main\";\r\nimport SearchingBookPage from \"./pages/searching-book\";\r\nimport { getAll, update } from \"./BooksAPI\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [books, setBooks] = useState();\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n    if (!ignore) {\r\n      getAllBook();\r\n    }\r\n    return () => {\r\n      ignore = true;\r\n    };\r\n  }, [setBooks]);\r\n\r\n  async function updateBook(book, shelf) {\r\n    await update(book, shelf);\r\n    await getAllBook();\r\n  }\r\n\r\n  async function getAllBook() {\r\n    const allOfBooks = await getAll();\r\n    setBooks(allOfBooks);\r\n  }\r\n  return (\r\n    <div className=\"app\">\r\n      <Routes>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          element={<BookShelfPage books={books} updateBook={updateBook} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/search\"\r\n          element={<SearchingBookPage updateBook={updateBook} />}\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}